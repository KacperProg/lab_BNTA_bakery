{"ast":null,"code":"var _jsxFileName = \"/Users/kacpi/Documents/BNTA/bnta_work/week_09/day_4/start_code/src/cake/CakeForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CakeForm = _ref => {\n  _s();\n  let {\n    onNewCakeSubmission\n  } = _ref;\n  const [cakeName, setCakeName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [rating, setRating] = useState(0);\n  const updateCakeName = event => {\n    setCakeName(event.target.value);\n  };\n  const updateIngredients = event => {\n    setIngredients(event.target.value);\n  };\n  const updatePrice = event => {\n    setPrice(event.target.value);\n  };\n  const updateRating = event => {\n    setRating(event.target.value);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const newCake = {\n      cakeName: cakeName,\n      ingredients: ingredients.split(),\n      price: price,\n      rating: rating\n    };\n    setCakeName(\"\");\n    setIngredients(\"\");\n    setPrice(0);\n    setRating(0);\n    onNewCakeSubmission(newCake);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new cake:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => handleFormSubmit(event),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cakeName-input\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cakeName-input\",\n        onInput: event => updateCakeName(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredients-input\",\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"ingredients-input\",\n        onInput: event => updateIngredients(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price-input\",\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        id: \"price-input\",\n        onInput: event => updatePrice(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rating-input\",\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"10\",\n        id: \"rating-input\",\n        onInput: event => updateRating(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add new cake :D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(CakeForm, \"byZMxxdVUn0RdIrSyZdhvyFDoHU=\");\n_c = CakeForm;\nexport default CakeForm;\nvar _c;\n$RefreshReg$(_c, \"CakeForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CakeForm","_ref","_s","onNewCakeSubmission","cakeName","setCakeName","ingredients","setIngredients","price","setPrice","rating","setRating","updateCakeName","event","target","value","updateIngredients","updatePrice","updateRating","handleFormSubmit","preventDefault","newCake","split","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onInput","min","max","_c","$RefreshReg$"],"sources":["/Users/kacpi/Documents/BNTA/bnta_work/week_09/day_4/start_code/src/cake/CakeForm.js"],"sourcesContent":["import {useState} from \"react\";\n\nconst CakeForm = ({onNewCakeSubmission}) => {\n\n    const [cakeName, setCakeName] = useState(\"\");\n    const [ingredients, setIngredients] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [rating, setRating] = useState(0);\n\n    const updateCakeName = (event) => {\n        setCakeName(event.target.value);\n    }\n    \n    const updateIngredients = (event) => {\n        setIngredients(event.target.value);\n    }\n    \n    const updatePrice = (event) => {\n        setPrice(event.target.value);\n    }\n    \n    const updateRating = (event) => {\n        setRating(event.target.value);\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        const newCake = {\n            cakeName: cakeName,\n            ingredients: ingredients.split(),\n            price: price,\n            rating: rating\n        }\n        setCakeName(\"\")\n        setIngredients(\"\")\n        setPrice(0)\n        setRating(0)\n        onNewCakeSubmission(newCake)\n    }\n\n    return (\n        <section>\n            <h2>Add a new cake:</h2>\n            <form onSubmit={(event) => handleFormSubmit(event)}>\n            <label htmlFor=\"cakeName-input\">Name:</label>\n                <input\n                type=\"text\" \n                id=\"cakeName-input\"\n                onInput={(event) => updateCakeName(event)}\n                />\n                <label htmlFor=\"ingredients-input\">Ingredients:</label>\n                <input\n                type=\"text\" \n                id=\"ingredients-input\"\n                onInput={(event) => updateIngredients(event)}\n                />\n                <label htmlFor=\"price-input\">Price:</label>\n                <input\n                type=\"number\" \n                min=\"0\"\n                id=\"price-input\"\n                onInput={(event) => updatePrice(event)}\n                />\n                <label htmlFor=\"rating-input\">Rating:</label>\n                <input\n                type=\"range\" \n                min=\"0\"\n                max=\"10\"\n                id=\"rating-input\"\n                onInput={(event) => updateRating(event)}\n                />\n                <input type=\"submit\" value=\"Add new cake :D\"/>\n                \n            </form>\n        </section>\n      )\n}\n \nexport default CakeForm"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAACC;EAAmB,CAAC,GAAAF,IAAA;EAEnC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMe,cAAc,GAAIC,KAAK,IAAK;IAC9BR,WAAW,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,KAAK,IAAK;IACjCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAME,WAAW,GAAIJ,KAAK,IAAK;IAC3BJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMG,YAAY,GAAIL,KAAK,IAAK;IAC5BF,SAAS,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMI,gBAAgB,GAAIN,KAAK,IAAK;IAChCA,KAAK,CAACO,cAAc,CAAC,CAAC;IACtB,MAAMC,OAAO,GAAG;MACZjB,QAAQ,EAAEA,QAAQ;MAClBE,WAAW,EAAEA,WAAW,CAACgB,KAAK,CAAC,CAAC;MAChCd,KAAK,EAAEA,KAAK;MACZE,MAAM,EAAEA;IACZ,CAAC;IACDL,WAAW,CAAC,EAAE,CAAC;IACfE,cAAc,CAAC,EAAE,CAAC;IAClBE,QAAQ,CAAC,CAAC,CAAC;IACXE,SAAS,CAAC,CAAC,CAAC;IACZR,mBAAmB,CAACkB,OAAO,CAAC;EAChC,CAAC;EAED,oBACItB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA;MAAM6B,QAAQ,EAAGf,KAAK,IAAKM,gBAAgB,CAACN,KAAK,CAAE;MAAAU,QAAA,gBACnDxB,OAAA;QAAO8B,OAAO,EAAC,gBAAgB;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzC5B,OAAA;QACA+B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,gBAAgB;QACnBC,OAAO,EAAGnB,KAAK,IAAKD,cAAc,CAACC,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACF5B,OAAA;QAAO8B,OAAO,EAAC,mBAAmB;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvD5B,OAAA;QACA+B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,mBAAmB;QACtBC,OAAO,EAAGnB,KAAK,IAAKG,iBAAiB,CAACH,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACF5B,OAAA;QAAO8B,OAAO,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3C5B,OAAA;QACA+B,IAAI,EAAC,QAAQ;QACbG,GAAG,EAAC,GAAG;QACPF,EAAE,EAAC,aAAa;QAChBC,OAAO,EAAGnB,KAAK,IAAKI,WAAW,CAACJ,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACF5B,OAAA;QAAO8B,OAAO,EAAC,cAAc;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7C5B,OAAA;QACA+B,IAAI,EAAC,OAAO;QACZG,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,IAAI;QACRH,EAAE,EAAC,cAAc;QACjBC,OAAO,EAAGnB,KAAK,IAAKK,YAAY,CAACL,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACF5B,OAAA;QAAO+B,IAAI,EAAC,QAAQ;QAACf,KAAK,EAAC;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB,CAAC;AAAAzB,EAAA,CA1EKF,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA4Ed,eAAeA,QAAQ;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}